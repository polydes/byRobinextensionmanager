<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	::if (ENV_ADMOB_APP_ID != null)::<key>GADApplicationIdentifier</key>
	<string>::ENV_ADMOB_APP_ID::</string>::end::
	::if ENV_APPLOVIN_ENABLED::<key>AppLovinSdkKey</key>
	<string>::ENV_APPLOVIN_SDKKEY::</string>::end::
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	::if (languages != null)::<key>CFBundleLocalizations</key>
	<array>::foreach languages::
		<string>::__current__::</string>::end::
	</array>::end::
	<key>CFBundleDisplayName</key>
	<string>::APP_TITLE::</string>
	<key>CFBundleExecutable</key>
	<string>${EXECUTABLE_NAME}</string>
	<key>CFBundleIdentifier</key>
	<string>::APP_PACKAGE::</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>${PRODUCT_NAME}</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>::APP_VERSION::</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>::APP_BUILD_NUMBER::</string>
	::if ENV_HEYZAP_ENABLED::<key>NSCalendarsUsageDescription</key>
	<string>Advertisement would like to create a calendar event.</string>
	<key>NSBluetoothPeripheralUsageDescription</key>
	<string>Advertisement would like to use bluetooth.</string>::end::
	::if ENV_SIMPLESHARE_ENABLED::<key>NSPhotoLibraryUsageDescription</key>
	<string>This app needs access to photos.</string>
	<key>NSPhotoLibraryAddUsageDescription</key>
	<string>This app needs access to photos</string>::end::
	<key>LSRequiresIPhoneOS</key>
	<true/>
	::if (IOS_LAUNCH_STORYBOARD != null)::<key>UILaunchStoryboardName</key>
	<string>::IOS_LAUNCH_STORYBOARD::</string>::end::
	<key>UIRequiredDeviceCapabilities</key>
	<dict>
		::foreach REQUIRED_CAPABILITY::<key>::name::</key>
		::if value::<true/>::else::<false/>::end::::end::
	</dict>
	<key>UIStatusBarHidden</key>
	<::WIN_FULLSCREEN::/>
	<key>UIRequiresFullScreen</key>
	<::WIN_FULLSCREEN::/>
	<key>UIViewControllerBasedStatusBarAppearance</key>
	<::!WIN_FULLSCREEN::/>
	::if (IOS_APP_ORIENTATION != null)::<key>UISupportedInterfaceOrientations</key>
	::IOS_APP_ORIENTATION::::end::
	::if ENV_TAPDAQ_ENABLED::
	<key>LSApplicationQueriesSchemes</key>
	<array>
    	  <string>fb</string>
    	  <string>instagram</string>
    	  <string>tumblr</string>
    	  <string>twitter</string>
	</array>
	<key>NSPhotoLibraryUsageDescription</key>
	<string>Some ad content may require access to the photo library.</string>
	<key>NSCalendarsUsageDescription</key>
	<string>Some ad content may create a calendar event.</string>
	<key>NSMotionUsageDescription</key>
	<string>Some ad content may require access to accelerometer for interactive ad experience.</string>
	<key>NSCameraUsageDescription</key>
	<string>Some ad content may access camera to take picture.</string>
	::end::
	<key>NSAppTransportSecurity</key>
	<dict>
		::if (IOS_ALLOW_INSECURE_HTTP != null)::<key>NSExceptionDomains</key>
		<dict>
			::foreach IOS_ALLOW_INSECURE_HTTP::
			<key>::domain::</key>
			<dict>
				<key>NSIncludesSubdomains</key>
				<true/>
				<key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>
				<true/>
				<key>NSTemporaryExceptionMinimumTLSVersion</key>
				<string>TLSv1.1</string>
			</dict>::end::
		</dict>::end::
		::if (IOS_ALLOW_INSECURE_HTTP == null)::<key>NSAllowsArbitraryLoads</key>
		<true/>
		::elseif ENV_WEBVIEW_ENABLED:: <key>NSAllowsArbitraryLoads</key>
		<true/>::end::
	</dict>
	::if (IOS_NON_EXEMPT_ENCRYPTION != null)::<key>ITSAppUsesNonExemptEncryption</key><::IOS_NON_EXEMPT_ENCRYPTION:: />::end::
</dict>
</plist>
